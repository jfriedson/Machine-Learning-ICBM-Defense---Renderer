#version 460

layout (triangles, equal_spacing, ccw) in;

in vec3 tc_position[];
in vec2 tc_texcoord[];
in vec3 tc_normal[];

uniform mat4 ModelMatrix;
uniform mat4 ViewMatrix;
uniform mat4 ProjectionMatrix;
uniform mat4 lightSpaceMatrix;

uniform sampler2D dispTex;


vec2 interpolate2D(vec2 v0, vec2 v1, vec2 v2)
{
    return vec2(gl_TessCoord.x) * v0 + vec2(gl_TessCoord.y) * v1 + vec2(gl_TessCoord.z) * v2;
}

vec3 interpolate3D(vec3 v0, vec3 v1, vec3 v2)
{
    return vec3(gl_TessCoord.x) * v0 + vec3(gl_TessCoord.y) * v1 + vec3(gl_TessCoord.z) * v2;
}


void main()
{
    vec2 texcoord = interpolate2D(tc_texcoord[0], tc_texcoord[1], tc_texcoord[2]);
    
    vec3 position = interpolate3D(tc_position[0], tc_position[1], tc_position[2]);
    vec3 disp_normal = normalize(position);

    float radius_adj = 10.f - distance(position, vec3(0.f));
    float height = texture(dispTex, texcoord).r;
    position += disp_normal * (height * 0.1f + radius_adj);

    gl_Position = lightSpaceMatrix * ModelMatrix * vec4(position.xyz, 1.f);
}
